/*
Posicionamiento CSS

La propiedad FLOAT y POSITION nos permiten identificar la posicion natural de cualquier elemento del documento HTML

El navegador coloca cada elemento teniendo en cuenta el orden en el que aparece en el documento y su tipo de visualizacion dependiendo si es un elemento de linea o de bloque

FLOAT y POSITION podemos modificar este comportamiento

Elementos Flotantes
    - float:  Convierte un elemento en flotante desplazándolo hasta la sona más a la izquierda o más a la derecha de la posicion en la que originalmnete se encontraba.
    - clear: Limpiar la flotación (left - Right)

Tipos de posicionamiento: 
    - static(default)
    - relative
    - absolute
    - fixed
    - sticky

Para mover los elementos mencinados se activan las propiedades: 

    - top (vertical - eje Y)
    - bottom (vertical - eje Y)
    - left (horizontal - eje X)
    - right (horizontal - eje X)
    - z-index (profundidad - eje Z)

Las propiedades top y left van a tener preferencia por sobre bottom y right respectivamente

Estas 5 propiedades no funcinan con el valor static
*/

/*static: Es el valor por defecto, significa que el elemento respeta el flujo del documento HTML por lo que no se puede mover ni posicionar*/

.static{
    background-color: yellow;
    position: static;
    top: 10px; 
    left: 10px;
}

/*relative: El elemento conserva sus dimensiones y posicion original en el flujo del documento. Si se mieve toma como referencia su posicion original*/

.relative{
    background-color: turquoise;
    position: relative;
    width: 300px;
    height: 50px;
    /* top: 50px;
    left: 50px;*/
} 

/*absolute: El elemento pierde sus dimensiones y posicion original en el flujo del documento, Si se mueve puede tomar como referencia 2 elementos*
 1) El primer ancetro con posicionamiento relativo
 2) Sino encuentra un ancestro relativo, se mueve respecto del documento HTML
*/
.section{
    position: relative;
}

.absolute{
    width:200px;
    height: 50px;
    background-color: tomato;
    position: absolute;
    /* top: 0;
    left: 0; */
    right: 0;
    bottom: 0;
}
.relative-parent{
    background-color: khaki;
    position: relative;
    width: 600px;
    height: 50px;
    top: 50px;
    left: 50px;
}
.absolute-child{
    background-color: lightgreen;
    position: absolute;
    top: -50px;
    left: -30px;
}
/*
Fixed: El y elemento pierde sus dimensiones y proporcion original en el flujo del documento HTML. Si se mueve toma como referencia el documento HTML y queda fijo en la proporcion, cuando el scroll se mueva el elmento no lo hara, queda FIJO
*/
.fixed{
    width: 300px;
    height: 100px;
    background-color: lightseagreen;
    position: fixed;
    bottom: 30px;
    right: 400px;
}

/*
sticky: Es una convinacion de posicionamiento relative y fixed, para este posicionamiento las propiedades de top, left, bottom y right no mueven el elemento, sirven para como un punto de referencía, mientras no lleguen a ese valor el elemento se comporta como relative, cuando llega se convierte en fixed

Para que este comportamiento funcione el elemento sticky debe ser hijo directo de body o su elemento contenedor debe tener dimensiones definidas y sólo será sticky dentro de las dimensiones de su contenedor padre.
*/
.sticky{
    background-color: lightskyblue;
    position: sticky;
    top: 50px;
}
.sticky-parent{
    border: thin dashed #000;
    height: 600px;
}
.sticky-child{
    background-color: lightslategray;
    position:sticky;
    top: 50px;
}
/*
z-index: ES una propiedad que permite controlar la profundidad de los elementos posicionados, su valor por defector es auto, acepta números positivos, negativos y cero.

A mayor valor el elemento esta más al frente, a menor valor más al fondo.

Un elemento padre nunca podra estar sobre sus elementos hijos, sin embargo los elementos hijos si pueden dándoles un valor negativo.
*/
.z-index-1,
.z-index-2{
    background-color: mediumaquamarine;
    border: thin solid #000;
    position: relative;
    width: 200px;
    height: 200px;
}
.z-index-1{
    z-index: 100;
}
.z-index-2{
    top: -200px;
    left: 100px;
    z-index: 200;
}
/*
Para que el elemento hijo este detras del elemento padre debe tener z-index el elemento hijo un numero negativo y el elemento padre no debe tener z-index definido.
*/
.z-index-parent{
    background-color: mediumorchid;
    width: 300px;
    height: 300px;
    position: relative;
}
.z-index-child{
    background-color: mediumvioletred;
    position: relative;
    width: 150px;
    height: 150px;
    top: -75px;
    left: 75px;
    z-index: -10;
}
